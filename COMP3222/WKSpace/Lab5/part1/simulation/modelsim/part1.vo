// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/29/2019 12:47:48"

// 
// Device: Altera EP2C20F484C7 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module part1 (
	SW,
	KEY,
	LEDG,
	LEDR);
input 	[1:0] SW;
input 	[0:0] KEY;
output 	[0:0] LEDG;
output 	[8:0] LEDR;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \simulateToBoard|generateNextState:3:RealiseNextState|Q~regout ;
wire \simulateToBoard|nextState[4]~0_combout ;
wire \simulateToBoard|generateNextState:4:RealiseNextState|Q~regout ;
wire \simulateToBoard|generateNextState:7:RealiseNextState|Q~regout ;
wire \simulateToBoard|nextState[8]~1_combout ;
wire \simulateToBoard|generateNextState:8:RealiseNextState|Q~regout ;
wire \simulateToBoard|z~combout ;
wire \simulateToBoard|generateNextState:0:RealiseNextState|Q~0_combout ;
wire \simulateToBoard|generateNextState:0:RealiseNextState|Q~regout ;
wire \simulateToBoard|generateNextState:6:RealiseNextState|Q~regout ;
wire \simulateToBoard|generateNextState:2:RealiseNextState|Q~regout ;
wire \simulateToBoard|nextState~3_combout ;
wire \simulateToBoard|generateNextState:5:RealiseNextState|Q~regout ;
wire \simulateToBoard|nextState~2_combout ;
wire \simulateToBoard|generateNextState:1:RealiseNextState|Q~regout ;
wire [8:0] \simulateToBoard|nextState ;
wire [1:0] \SW~combout ;
wire [0:0] \KEY~combout ;


cycloneii_io \SW[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\SW~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(SW[0]));
// synopsys translate_off
defparam \SW[0]~I .input_async_reset = "none";
defparam \SW[0]~I .input_power_up = "low";
defparam \SW[0]~I .input_register_mode = "none";
defparam \SW[0]~I .input_sync_reset = "none";
defparam \SW[0]~I .oe_async_reset = "none";
defparam \SW[0]~I .oe_power_up = "low";
defparam \SW[0]~I .oe_register_mode = "none";
defparam \SW[0]~I .oe_sync_reset = "none";
defparam \SW[0]~I .operation_mode = "input";
defparam \SW[0]~I .output_async_reset = "none";
defparam \SW[0]~I .output_power_up = "low";
defparam \SW[0]~I .output_register_mode = "none";
defparam \SW[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \SW[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\SW~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(SW[1]));
// synopsys translate_off
defparam \SW[1]~I .input_async_reset = "none";
defparam \SW[1]~I .input_power_up = "low";
defparam \SW[1]~I .input_register_mode = "none";
defparam \SW[1]~I .input_sync_reset = "none";
defparam \SW[1]~I .oe_async_reset = "none";
defparam \SW[1]~I .oe_power_up = "low";
defparam \SW[1]~I .oe_register_mode = "none";
defparam \SW[1]~I .oe_sync_reset = "none";
defparam \SW[1]~I .operation_mode = "input";
defparam \SW[1]~I .output_async_reset = "none";
defparam \SW[1]~I .output_power_up = "low";
defparam \SW[1]~I .output_register_mode = "none";
defparam \SW[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \simulateToBoard|nextState[3] (
// Equation(s):
// \simulateToBoard|nextState [3] = (\simulateToBoard|generateNextState:2:RealiseNextState|Q~regout  & (\SW~combout [0] & !\SW~combout [1]))

	.dataa(\simulateToBoard|generateNextState:2:RealiseNextState|Q~regout ),
	.datab(\SW~combout [0]),
	.datac(vcc),
	.datad(\SW~combout [1]),
	.cin(gnd),
	.combout(\simulateToBoard|nextState [3]),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|nextState[3] .lut_mask = 16'h0088;
defparam \simulateToBoard|nextState[3] .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \simulateToBoard|generateNextState:3:RealiseNextState|Q (
	.clk(\KEY~combout [0]),
	.datain(\simulateToBoard|nextState [3]),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\simulateToBoard|generateNextState:3:RealiseNextState|Q~regout ));

cycloneii_lcell_comb \simulateToBoard|nextState[4]~0 (
// Equation(s):
// \simulateToBoard|nextState[4]~0_combout  = (\SW~combout [0] & (!\SW~combout [1] & ((\simulateToBoard|generateNextState:4:RealiseNextState|Q~regout ) # (\simulateToBoard|generateNextState:3:RealiseNextState|Q~regout ))))

	.dataa(\SW~combout [0]),
	.datab(\simulateToBoard|generateNextState:4:RealiseNextState|Q~regout ),
	.datac(\simulateToBoard|generateNextState:3:RealiseNextState|Q~regout ),
	.datad(\SW~combout [1]),
	.cin(gnd),
	.combout(\simulateToBoard|nextState[4]~0_combout ),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|nextState[4]~0 .lut_mask = 16'h00A8;
defparam \simulateToBoard|nextState[4]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \simulateToBoard|generateNextState:4:RealiseNextState|Q (
	.clk(\KEY~combout [0]),
	.datain(\simulateToBoard|nextState[4]~0_combout ),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\simulateToBoard|generateNextState:4:RealiseNextState|Q~regout ));

cycloneii_lcell_comb \simulateToBoard|nextState[7] (
// Equation(s):
// \simulateToBoard|nextState [7] = (\simulateToBoard|generateNextState:6:RealiseNextState|Q~regout  & (\SW~combout [0] & \SW~combout [1]))

	.dataa(\simulateToBoard|generateNextState:6:RealiseNextState|Q~regout ),
	.datab(\SW~combout [0]),
	.datac(\SW~combout [1]),
	.datad(vcc),
	.cin(gnd),
	.combout(\simulateToBoard|nextState [7]),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|nextState[7] .lut_mask = 16'h8080;
defparam \simulateToBoard|nextState[7] .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \simulateToBoard|generateNextState:7:RealiseNextState|Q (
	.clk(\KEY~combout [0]),
	.datain(\simulateToBoard|nextState [7]),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\simulateToBoard|generateNextState:7:RealiseNextState|Q~regout ));

cycloneii_lcell_comb \simulateToBoard|nextState[8]~1 (
// Equation(s):
// \simulateToBoard|nextState[8]~1_combout  = (\SW~combout [0] & (\SW~combout [1] & ((\simulateToBoard|generateNextState:8:RealiseNextState|Q~regout ) # (\simulateToBoard|generateNextState:7:RealiseNextState|Q~regout ))))

	.dataa(\SW~combout [0]),
	.datab(\SW~combout [1]),
	.datac(\simulateToBoard|generateNextState:8:RealiseNextState|Q~regout ),
	.datad(\simulateToBoard|generateNextState:7:RealiseNextState|Q~regout ),
	.cin(gnd),
	.combout(\simulateToBoard|nextState[8]~1_combout ),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|nextState[8]~1 .lut_mask = 16'h8880;
defparam \simulateToBoard|nextState[8]~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \simulateToBoard|generateNextState:8:RealiseNextState|Q (
	.clk(\KEY~combout [0]),
	.datain(\simulateToBoard|nextState[8]~1_combout ),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\simulateToBoard|generateNextState:8:RealiseNextState|Q~regout ));

cycloneii_lcell_comb \simulateToBoard|z (
// Equation(s):
// \simulateToBoard|z~combout  = (\simulateToBoard|generateNextState:4:RealiseNextState|Q~regout ) # (\simulateToBoard|generateNextState:8:RealiseNextState|Q~regout )

	.dataa(\simulateToBoard|generateNextState:4:RealiseNextState|Q~regout ),
	.datab(\simulateToBoard|generateNextState:8:RealiseNextState|Q~regout ),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\simulateToBoard|z~combout ),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|z .lut_mask = 16'hEEEE;
defparam \simulateToBoard|z .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \KEY[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\KEY~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(KEY[0]));
// synopsys translate_off
defparam \KEY[0]~I .input_async_reset = "none";
defparam \KEY[0]~I .input_power_up = "low";
defparam \KEY[0]~I .input_register_mode = "none";
defparam \KEY[0]~I .input_sync_reset = "none";
defparam \KEY[0]~I .oe_async_reset = "none";
defparam \KEY[0]~I .oe_power_up = "low";
defparam \KEY[0]~I .oe_register_mode = "none";
defparam \KEY[0]~I .oe_sync_reset = "none";
defparam \KEY[0]~I .operation_mode = "input";
defparam \KEY[0]~I .output_async_reset = "none";
defparam \KEY[0]~I .output_power_up = "low";
defparam \KEY[0]~I .output_register_mode = "none";
defparam \KEY[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \simulateToBoard|generateNextState:0:RealiseNextState|Q~0 (
// Equation(s):
// \simulateToBoard|generateNextState:0:RealiseNextState|Q~0_combout  = !\SW~combout [0]

	.dataa(\SW~combout [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\simulateToBoard|generateNextState:0:RealiseNextState|Q~0_combout ),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|generateNextState:0:RealiseNextState|Q~0 .lut_mask = 16'h5555;
defparam \simulateToBoard|generateNextState:0:RealiseNextState|Q~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \simulateToBoard|generateNextState:0:RealiseNextState|Q (
	.clk(\KEY~combout [0]),
	.datain(\simulateToBoard|generateNextState:0:RealiseNextState|Q~0_combout ),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\simulateToBoard|generateNextState:0:RealiseNextState|Q~regout ));

cycloneii_lcell_comb \simulateToBoard|nextState[6] (
// Equation(s):
// \simulateToBoard|nextState [6] = (\simulateToBoard|generateNextState:5:RealiseNextState|Q~regout  & (\SW~combout [0] & \SW~combout [1]))

	.dataa(\simulateToBoard|generateNextState:5:RealiseNextState|Q~regout ),
	.datab(\SW~combout [0]),
	.datac(\SW~combout [1]),
	.datad(vcc),
	.cin(gnd),
	.combout(\simulateToBoard|nextState [6]),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|nextState[6] .lut_mask = 16'h8080;
defparam \simulateToBoard|nextState[6] .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \simulateToBoard|generateNextState:6:RealiseNextState|Q (
	.clk(\KEY~combout [0]),
	.datain(\simulateToBoard|nextState [6]),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\simulateToBoard|generateNextState:6:RealiseNextState|Q~regout ));

cycloneii_lcell_comb \simulateToBoard|nextState[2] (
// Equation(s):
// \simulateToBoard|nextState [2] = (\simulateToBoard|generateNextState:1:RealiseNextState|Q~regout  & (\SW~combout [0] & !\SW~combout [1]))

	.dataa(\simulateToBoard|generateNextState:1:RealiseNextState|Q~regout ),
	.datab(\SW~combout [0]),
	.datac(vcc),
	.datad(\SW~combout [1]),
	.cin(gnd),
	.combout(\simulateToBoard|nextState [2]),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|nextState[2] .lut_mask = 16'h0088;
defparam \simulateToBoard|nextState[2] .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \simulateToBoard|generateNextState:2:RealiseNextState|Q (
	.clk(\KEY~combout [0]),
	.datain(\simulateToBoard|nextState [2]),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\simulateToBoard|generateNextState:2:RealiseNextState|Q~regout ));

cycloneii_lcell_comb \simulateToBoard|nextState~3 (
// Equation(s):
// \simulateToBoard|nextState~3_combout  = (\simulateToBoard|generateNextState:4:RealiseNextState|Q~regout ) # ((\simulateToBoard|generateNextState:0:RealiseNextState|Q~regout ) # ((\simulateToBoard|generateNextState:1:RealiseNextState|Q~regout ) # 
// (\simulateToBoard|generateNextState:3:RealiseNextState|Q~regout )))

	.dataa(\simulateToBoard|generateNextState:4:RealiseNextState|Q~regout ),
	.datab(\simulateToBoard|generateNextState:0:RealiseNextState|Q~regout ),
	.datac(\simulateToBoard|generateNextState:1:RealiseNextState|Q~regout ),
	.datad(\simulateToBoard|generateNextState:3:RealiseNextState|Q~regout ),
	.cin(gnd),
	.combout(\simulateToBoard|nextState~3_combout ),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|nextState~3 .lut_mask = 16'hFFFE;
defparam \simulateToBoard|nextState~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \simulateToBoard|nextState[5] (
// Equation(s):
// \simulateToBoard|nextState [5] = (\SW~combout [0] & (\SW~combout [1] & ((\simulateToBoard|generateNextState:2:RealiseNextState|Q~regout ) # (\simulateToBoard|nextState~3_combout ))))

	.dataa(\SW~combout [0]),
	.datab(\SW~combout [1]),
	.datac(\simulateToBoard|generateNextState:2:RealiseNextState|Q~regout ),
	.datad(\simulateToBoard|nextState~3_combout ),
	.cin(gnd),
	.combout(\simulateToBoard|nextState [5]),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|nextState[5] .lut_mask = 16'h8880;
defparam \simulateToBoard|nextState[5] .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \simulateToBoard|generateNextState:5:RealiseNextState|Q (
	.clk(\KEY~combout [0]),
	.datain(\simulateToBoard|nextState [5]),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\simulateToBoard|generateNextState:5:RealiseNextState|Q~regout ));

cycloneii_lcell_comb \simulateToBoard|nextState~2 (
// Equation(s):
// \simulateToBoard|nextState~2_combout  = (\simulateToBoard|generateNextState:8:RealiseNextState|Q~regout ) # ((\simulateToBoard|generateNextState:0:RealiseNextState|Q~regout ) # ((\simulateToBoard|generateNextState:5:RealiseNextState|Q~regout ) # 
// (\simulateToBoard|generateNextState:7:RealiseNextState|Q~regout )))

	.dataa(\simulateToBoard|generateNextState:8:RealiseNextState|Q~regout ),
	.datab(\simulateToBoard|generateNextState:0:RealiseNextState|Q~regout ),
	.datac(\simulateToBoard|generateNextState:5:RealiseNextState|Q~regout ),
	.datad(\simulateToBoard|generateNextState:7:RealiseNextState|Q~regout ),
	.cin(gnd),
	.combout(\simulateToBoard|nextState~2_combout ),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|nextState~2 .lut_mask = 16'hFFFE;
defparam \simulateToBoard|nextState~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \simulateToBoard|nextState[1] (
// Equation(s):
// \simulateToBoard|nextState [1] = (\SW~combout [0] & (!\SW~combout [1] & ((\simulateToBoard|generateNextState:6:RealiseNextState|Q~regout ) # (\simulateToBoard|nextState~2_combout ))))

	.dataa(\SW~combout [0]),
	.datab(\simulateToBoard|generateNextState:6:RealiseNextState|Q~regout ),
	.datac(\simulateToBoard|nextState~2_combout ),
	.datad(\SW~combout [1]),
	.cin(gnd),
	.combout(\simulateToBoard|nextState [1]),
	.cout());
// synopsys translate_off
defparam \simulateToBoard|nextState[1] .lut_mask = 16'h00A8;
defparam \simulateToBoard|nextState[1] .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \simulateToBoard|generateNextState:1:RealiseNextState|Q (
	.clk(\KEY~combout [0]),
	.datain(\simulateToBoard|nextState [1]),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\simulateToBoard|generateNextState:1:RealiseNextState|Q~regout ));

cycloneii_io \LEDG[0]~I (
	.datain(\simulateToBoard|z~combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDG[0]));
// synopsys translate_off
defparam \LEDG[0]~I .input_async_reset = "none";
defparam \LEDG[0]~I .input_power_up = "low";
defparam \LEDG[0]~I .input_register_mode = "none";
defparam \LEDG[0]~I .input_sync_reset = "none";
defparam \LEDG[0]~I .oe_async_reset = "none";
defparam \LEDG[0]~I .oe_power_up = "low";
defparam \LEDG[0]~I .oe_register_mode = "none";
defparam \LEDG[0]~I .oe_sync_reset = "none";
defparam \LEDG[0]~I .operation_mode = "output";
defparam \LEDG[0]~I .output_async_reset = "none";
defparam \LEDG[0]~I .output_power_up = "low";
defparam \LEDG[0]~I .output_register_mode = "none";
defparam \LEDG[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \LEDR[0]~I (
	.datain(\simulateToBoard|generateNextState:0:RealiseNextState|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[0]));
// synopsys translate_off
defparam \LEDR[0]~I .input_async_reset = "none";
defparam \LEDR[0]~I .input_power_up = "low";
defparam \LEDR[0]~I .input_register_mode = "none";
defparam \LEDR[0]~I .input_sync_reset = "none";
defparam \LEDR[0]~I .oe_async_reset = "none";
defparam \LEDR[0]~I .oe_power_up = "low";
defparam \LEDR[0]~I .oe_register_mode = "none";
defparam \LEDR[0]~I .oe_sync_reset = "none";
defparam \LEDR[0]~I .operation_mode = "output";
defparam \LEDR[0]~I .output_async_reset = "none";
defparam \LEDR[0]~I .output_power_up = "low";
defparam \LEDR[0]~I .output_register_mode = "none";
defparam \LEDR[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \LEDR[1]~I (
	.datain(\simulateToBoard|generateNextState:1:RealiseNextState|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[1]));
// synopsys translate_off
defparam \LEDR[1]~I .input_async_reset = "none";
defparam \LEDR[1]~I .input_power_up = "low";
defparam \LEDR[1]~I .input_register_mode = "none";
defparam \LEDR[1]~I .input_sync_reset = "none";
defparam \LEDR[1]~I .oe_async_reset = "none";
defparam \LEDR[1]~I .oe_power_up = "low";
defparam \LEDR[1]~I .oe_register_mode = "none";
defparam \LEDR[1]~I .oe_sync_reset = "none";
defparam \LEDR[1]~I .operation_mode = "output";
defparam \LEDR[1]~I .output_async_reset = "none";
defparam \LEDR[1]~I .output_power_up = "low";
defparam \LEDR[1]~I .output_register_mode = "none";
defparam \LEDR[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \LEDR[2]~I (
	.datain(\simulateToBoard|generateNextState:2:RealiseNextState|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[2]));
// synopsys translate_off
defparam \LEDR[2]~I .input_async_reset = "none";
defparam \LEDR[2]~I .input_power_up = "low";
defparam \LEDR[2]~I .input_register_mode = "none";
defparam \LEDR[2]~I .input_sync_reset = "none";
defparam \LEDR[2]~I .oe_async_reset = "none";
defparam \LEDR[2]~I .oe_power_up = "low";
defparam \LEDR[2]~I .oe_register_mode = "none";
defparam \LEDR[2]~I .oe_sync_reset = "none";
defparam \LEDR[2]~I .operation_mode = "output";
defparam \LEDR[2]~I .output_async_reset = "none";
defparam \LEDR[2]~I .output_power_up = "low";
defparam \LEDR[2]~I .output_register_mode = "none";
defparam \LEDR[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \LEDR[3]~I (
	.datain(\simulateToBoard|generateNextState:3:RealiseNextState|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[3]));
// synopsys translate_off
defparam \LEDR[3]~I .input_async_reset = "none";
defparam \LEDR[3]~I .input_power_up = "low";
defparam \LEDR[3]~I .input_register_mode = "none";
defparam \LEDR[3]~I .input_sync_reset = "none";
defparam \LEDR[3]~I .oe_async_reset = "none";
defparam \LEDR[3]~I .oe_power_up = "low";
defparam \LEDR[3]~I .oe_register_mode = "none";
defparam \LEDR[3]~I .oe_sync_reset = "none";
defparam \LEDR[3]~I .operation_mode = "output";
defparam \LEDR[3]~I .output_async_reset = "none";
defparam \LEDR[3]~I .output_power_up = "low";
defparam \LEDR[3]~I .output_register_mode = "none";
defparam \LEDR[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \LEDR[4]~I (
	.datain(\simulateToBoard|generateNextState:4:RealiseNextState|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[4]));
// synopsys translate_off
defparam \LEDR[4]~I .input_async_reset = "none";
defparam \LEDR[4]~I .input_power_up = "low";
defparam \LEDR[4]~I .input_register_mode = "none";
defparam \LEDR[4]~I .input_sync_reset = "none";
defparam \LEDR[4]~I .oe_async_reset = "none";
defparam \LEDR[4]~I .oe_power_up = "low";
defparam \LEDR[4]~I .oe_register_mode = "none";
defparam \LEDR[4]~I .oe_sync_reset = "none";
defparam \LEDR[4]~I .operation_mode = "output";
defparam \LEDR[4]~I .output_async_reset = "none";
defparam \LEDR[4]~I .output_power_up = "low";
defparam \LEDR[4]~I .output_register_mode = "none";
defparam \LEDR[4]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \LEDR[5]~I (
	.datain(\simulateToBoard|generateNextState:5:RealiseNextState|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[5]));
// synopsys translate_off
defparam \LEDR[5]~I .input_async_reset = "none";
defparam \LEDR[5]~I .input_power_up = "low";
defparam \LEDR[5]~I .input_register_mode = "none";
defparam \LEDR[5]~I .input_sync_reset = "none";
defparam \LEDR[5]~I .oe_async_reset = "none";
defparam \LEDR[5]~I .oe_power_up = "low";
defparam \LEDR[5]~I .oe_register_mode = "none";
defparam \LEDR[5]~I .oe_sync_reset = "none";
defparam \LEDR[5]~I .operation_mode = "output";
defparam \LEDR[5]~I .output_async_reset = "none";
defparam \LEDR[5]~I .output_power_up = "low";
defparam \LEDR[5]~I .output_register_mode = "none";
defparam \LEDR[5]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \LEDR[6]~I (
	.datain(\simulateToBoard|generateNextState:6:RealiseNextState|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[6]));
// synopsys translate_off
defparam \LEDR[6]~I .input_async_reset = "none";
defparam \LEDR[6]~I .input_power_up = "low";
defparam \LEDR[6]~I .input_register_mode = "none";
defparam \LEDR[6]~I .input_sync_reset = "none";
defparam \LEDR[6]~I .oe_async_reset = "none";
defparam \LEDR[6]~I .oe_power_up = "low";
defparam \LEDR[6]~I .oe_register_mode = "none";
defparam \LEDR[6]~I .oe_sync_reset = "none";
defparam \LEDR[6]~I .operation_mode = "output";
defparam \LEDR[6]~I .output_async_reset = "none";
defparam \LEDR[6]~I .output_power_up = "low";
defparam \LEDR[6]~I .output_register_mode = "none";
defparam \LEDR[6]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \LEDR[7]~I (
	.datain(\simulateToBoard|generateNextState:7:RealiseNextState|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[7]));
// synopsys translate_off
defparam \LEDR[7]~I .input_async_reset = "none";
defparam \LEDR[7]~I .input_power_up = "low";
defparam \LEDR[7]~I .input_register_mode = "none";
defparam \LEDR[7]~I .input_sync_reset = "none";
defparam \LEDR[7]~I .oe_async_reset = "none";
defparam \LEDR[7]~I .oe_power_up = "low";
defparam \LEDR[7]~I .oe_register_mode = "none";
defparam \LEDR[7]~I .oe_sync_reset = "none";
defparam \LEDR[7]~I .operation_mode = "output";
defparam \LEDR[7]~I .output_async_reset = "none";
defparam \LEDR[7]~I .output_power_up = "low";
defparam \LEDR[7]~I .output_register_mode = "none";
defparam \LEDR[7]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \LEDR[8]~I (
	.datain(\simulateToBoard|generateNextState:8:RealiseNextState|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[8]));
// synopsys translate_off
defparam \LEDR[8]~I .input_async_reset = "none";
defparam \LEDR[8]~I .input_power_up = "low";
defparam \LEDR[8]~I .input_register_mode = "none";
defparam \LEDR[8]~I .input_sync_reset = "none";
defparam \LEDR[8]~I .oe_async_reset = "none";
defparam \LEDR[8]~I .oe_power_up = "low";
defparam \LEDR[8]~I .oe_register_mode = "none";
defparam \LEDR[8]~I .oe_sync_reset = "none";
defparam \LEDR[8]~I .operation_mode = "output";
defparam \LEDR[8]~I .output_async_reset = "none";
defparam \LEDR[8]~I .output_power_up = "low";
defparam \LEDR[8]~I .output_register_mode = "none";
defparam \LEDR[8]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
