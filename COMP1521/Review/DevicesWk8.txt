Wrapper Function to handle Error of syscall

_exit()
    return SIGCHLD

waitpid(pid, &status, options) 

While executing, read instruction from->PC++->Do something.

Two types of exceptional events 
    exceptions ... from conditions within an executing program 
        often, fatal to continued execution of program 
    interrupts ... from events external to the program 
        often, require some action and then execution can continue 
    Typically cause a signal to be sent to a process 

System call generates exception:
    transfer control to syscall handler
    carry out operations
    return control

Signals can be generated from a variety of sources 
    from another process via kill() 
    from the operating system (e.g. timer) 
    from within the process (e.g. system call) 
    from a fault in the process (e.g. div-by-zero)  
    from a device (e.g. disk read completes)    

    Signals from internal process activity, e.g. 
        SIGILL ... illegal instruction    (Term by default) 
        SIGABRT ... generated by abort()    (Core by default) 
        SIGFPE ... floating point exception    (Core by default) 
        SIGSEGV ... invalid memory reference    (Core by default) 
    Signals from external process events, e.g. 
        SIGINT ... interrupt from keyboard    (Term by default) 
        SIGPIPE ... broken pipe    (Term by default) 
        SIGCHLD ... child process stopped or died    (Ignored by default) 
        SIGTSTP ... stop typed at tty (control-Z)    (Stop by default) 

Memory-mapped input/output 
    Certain Virtual memory maps to 
        data buffers of i/o device 
        control registers of i/o device 
    Uses memory to access logic circuits to reduce hardwares.
    can use full range of CPU operations on device memory 

Device "files" can be accessed via the file system under /dev, e.g. 
    /dev/diskN ... (part of) a hard drive 
    /dev/ttyN ... a terminal device 
    /dev/ptyN ... a pseudo-terminal device  
    /dev/mem ... the physical memory   (protected) 
    /dev/null ... data sink or empty source 
    /dev/random ... stream of pseudo-random numbers 

Two standard types of "device files" ... 
    Character devices   (aka character special files) 
        provide unbuffered direct access to hardware devices 
        programmers interact with device by writing individual bytes 
        do not necessarily provide byte-by-byte hardware i/o (e.g. disks) 
    Block devices   (aka block special files) 
        provide buffered access to hardware devices 
        programmers interact with device by writing chunks of bytes 
        data transferred to device via operating system buffers 

Sundry:
    sleep()
        returns N-M(actural time slept)
    
    factors in determining priority 
        user processes have lower priority than system processes 
        processes have niceness value -20 (highest) .. +20 (lowest) 
        recent CPU time usage by the process 

Interrupt:
    pre-emption
    I/O
    